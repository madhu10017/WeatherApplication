package com.bayer.efm.hsp.database.dao;

import java.util.ArrayList;
import java.util.List;

import net.sqlcipher.Cursor;
import net.sqlcipher.SQLException;
import net.sqlcipher.database.SQLiteDatabase;
import net.sqlcipher.database.SQLiteStatement;
import android.content.ContentValues;
import android.util.Log;

import com.bayer.efm.hsp.database.dto.DTO;
import com.bayer.efm.hsp.database.dto.SeedSettingGradeDTO;

public class SeedSettingGradeDAO implements DAO 
{

	private static SeedSettingGradeDAO seedGradeDAO;

	private SeedSettingGradeDAO() 
	{

	}

	public static SeedSettingGradeDAO getInstance() 
	{
		if (seedGradeDAO == null)
			seedGradeDAO = new SeedSettingGradeDAO();

		return seedGradeDAO;
	}

	@Override
	public boolean insert(SQLiteDatabase dbObject, List<DTO> list) 
	{
		try 
		{
			dbObject.beginTransaction();
			SQLiteStatement stmt = dbObject.compileStatement("INSERT INTO SeedSettingGrade(idSeedSettingGrade,name)VALUES (?,?)");

			int count = 1;

			for (DTO items : list) {

				SeedSettingGradeDTO dto = (SeedSettingGradeDTO) items;
				stmt.bindString(count++, dto.getIdSeedSettingGrade());
				stmt.bindString(count++, dto.getName());
				count = 1;

				stmt.executeInsert();
			}

			dbObject.setTransactionSuccessful();
			return true;
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- insert", e.getMessage());
		} finally {
			dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}

	@Override
	public boolean delete(SQLiteDatabase dbObject, DTO dto) {
		SeedSettingGradeDTO dtoObj = (SeedSettingGradeDTO) dto;
		try {
			dbObject.compileStatement(
					"DELETE FROM SeedSettingGrade WHERE idSeedSettingGrade  = '"
							+ dtoObj.getIdSeedSettingGrade() + "'").execute();

			return true;
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- delete", e.getMessage());
		}

		finally {
			dbObject.close();
		}
		return false;
	}

	@Override
	public boolean update(SQLiteDatabase dbObject, DTO dto) 
	{
		try 
		{
			SeedSettingGradeDTO dtoObj = (SeedSettingGradeDTO) dto;
			String whereCls = "idSeedSettingGrade  = '" + dtoObj.getIdSeedSettingGrade() + "'";

			ContentValues cValues = new ContentValues();
			dbObject.update("SeedSettingGrade", cValues, whereCls, null);

			return true;
		} catch (SQLException e) {
			Log.e("SeedSettingGradeDAO  -- update", e.getMessage());
		} finally {
			dbObject.close();
		}
		return false;
	}

	@Override
	public List<DTO> getRecords(SQLiteDatabase dbObject) {
		List<DTO> instList = new ArrayList<DTO>();
		Cursor cursor = null;

		int count = 0;

		try {
			cursor = dbObject.rawQuery("SELECT * FROM SeedSettingGrade", null);
			if (cursor.moveToFirst()) {
				do {
					SeedSettingGradeDTO dto = new SeedSettingGradeDTO();
					dto.setIdSeedSettingGrade(cursor.getString(count++));
					dto.setName(cursor.getString(count++));

					instList.add(dto);

					count = 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- getRecords", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();

			dbObject.close();
		}

		return instList;
	}

	@Override
	public List<DTO> getRecordsWithValues(SQLiteDatabase dbObject,
			String columnName, String columnValue) {
		List<DTO> instList = new ArrayList<DTO>();
		Cursor cursor = null;

		int count = 0;

		try {
			cursor = dbObject.rawQuery("SELECT * FROM SeedSettingGrade WHERE "
					+ columnName + " = '" + columnValue + "'", null);
			if (cursor.moveToFirst()) {
				do {
					SeedSettingGradeDTO dto = new SeedSettingGradeDTO();
					dto.setIdSeedSettingGrade(cursor.getString(count++));
					dto.setName(cursor.getString(count++));

					instList.add(dto);

					count = 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- getRecordsWithValues", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();
			dbObject.close();
		}

		return instList;
	}

	public boolean insertAll(SQLiteDatabase dbObject, List<SeedSettingGradeDTO> list,
			String tablename) {
		try {
			dbObject.beginTransaction();
			SQLiteStatement stmt = dbObject.compileStatement("INSERT INTO "+ tablename+ "(idSeedSettingGrade,name)VALUES (?,?)");
			int count = 1;

			for (SeedSettingGradeDTO dto : list) {
				stmt.bindString(count++, dto.getIdSeedSettingGrade());
				stmt.bindString(count++, dto.getName());

				count = 1;

				stmt.executeInsert();
			}

			dbObject.setTransactionSuccessful();
			return true;
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- insert", e.getMessage());
		} finally {
			dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}

	public boolean updatePartialData(SQLiteDatabase dbObject) {
		try {
			String query = "UPDATE  SeedSettingGrade o set o.idSeedSettingGrade=t.idSeedSettingGrade,o.name=t.name from SeedSettingGrade_Temp t where o.idSeedSettingGrade=t.idSeedSettingGrade";
			Cursor cu = dbObject.rawQuery(query, null);
			cu.moveToFirst();
			cu.close();
			return true;

		} catch (SQLException e) {
			Log.e("SeedSettingGradeDAO  -- updatePartial", e.getMessage());
		} finally {
			dbObject.close();
		}
		return false;
	}

	public boolean insertPartialData(SQLiteDatabase dbObject) {
		try {
			String query = "INSERT OR REPLACE INTO SeedSettingGrade(idSeedSettingGrade,name) SELECT t.idSeedSettingGrade,t.name  FROM SeedSettingGrade_Temp t left join SeedSettingGrade o on o.idSeedSettingGrade=t.idSeedSettingGrade";
			dbObject.execSQL(query);

			return true;
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- insertPartial", e.getMessage());
		} finally {
			// dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}

	public boolean deleteAll(SQLiteDatabase dbObject) {
		try {
			String query = "DELETE  FROM SeedSettingGrade_Temp";
			dbObject.execSQL(query);

			return true;
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- deleteall", e.getMessage());
		} finally {

			dbObject.close();
		}
		return false;

	}

	public List<SeedSettingGradeDTO> getCompleteData(SQLiteDatabase dbObject) {
		List<SeedSettingGradeDTO> instList = new ArrayList<SeedSettingGradeDTO>();
		Cursor cursor = null;
		int count = 0;

		try {
			cursor = dbObject.rawQuery("SELECT * FROM SeedSettingGrade ", null);
			if (cursor.moveToFirst()) {
				do {
					SeedSettingGradeDTO dto = new SeedSettingGradeDTO();
					dto.setIdSeedSettingGrade(cursor.getString(count++));
					dto.setName(cursor.getString(count++));

					instList.add(dto);

					count = 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("SeedSettingGradeDAO  -- getRecords", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();

			dbObject.close();
		}

		return instList;
	}
}
