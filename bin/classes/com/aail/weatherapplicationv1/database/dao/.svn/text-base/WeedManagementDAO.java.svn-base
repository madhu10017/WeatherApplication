/**
 * 
 */
package com.bayer.efm.hsp.database.dao;

import java.util.ArrayList;
import java.util.List;

import net.sqlcipher.database.SQLiteDatabase;
import net.sqlcipher.database.SQLiteStatement;
import android.content.ContentValues;
import net.sqlcipher.Cursor;
import net.sqlcipher.SQLException;
import android.util.Log;

import com.bayer.efm.hsp.database.dto.DTO;
import com.bayer.efm.hsp.database.dto.WeedManagementDTO;
import com.bayer.efm.hsp.utils.CommonMethods;

public class WeedManagementDAO implements DAO {

	private static WeedManagementDAO weedmanagementDAO;

	private WeedManagementDAO() {

	}

	public static WeedManagementDAO getInstance() {
		if (weedmanagementDAO == null)
			weedmanagementDAO = new WeedManagementDAO();

		return weedmanagementDAO;
	}

	@Override
	public boolean insert(SQLiteDatabase dbObject, List<DTO> list) {
		try {
			dbObject.beginTransaction();
			SQLiteStatement stmt = dbObject.compileStatement("INSERT INTO WeedManagement(Idweedmanagement,idWeedType,idWeedicide,quantity,weedManagementDate,idLand,idStages,Photo,Datecreated,Datemodified,syncFlag,actionFlag)VALUES (?,?,?,?,?,?,?,?,?,?,?,?)");

			int count = 1;

			System.out.println("Suresh List size :"+list.size());
			
			for (DTO items : list) 
			{
				WeedManagementDTO dto = (WeedManagementDTO) items;
				stmt.bindString(count++, CommonMethods.getUUID());
				stmt.bindString(count++, dto.getIdWeedType());
				stmt.bindString(count++, dto.getIdWeedicide());
				stmt.bindString(count++, dto.getQuantity());
				stmt.bindString(count++, dto.getWeedManagementDate());
				stmt.bindString(count++, dto.getIdLand());
				stmt.bindString(count++, dto.getIdStages());
				stmt.bindString(count++, dto.getPhoto());
				stmt.bindString(count++, dto.getDatecreated());
				stmt.bindString(count++, dto.getDatemodified());
				stmt.bindLong(count++, dto.getSyncFlag());
				stmt.bindLong(count++, dto.getActionFlag());
				
				count = 1;

				stmt.executeInsert();
			}

			dbObject.setTransactionSuccessful();
			return true;
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- insert", e.getMessage());
		} finally {
			dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}

	@Override
	public boolean delete(SQLiteDatabase dbObject, DTO dto) {
		WeedManagementDTO dtoObj = (WeedManagementDTO) dto;
		try {
			dbObject.compileStatement(
					"DELETE FROM WeedManagement WHERE Idweedmanagement = '"
							+ dtoObj.getIdweedmanagement() + "'").execute();

			return true;
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- delete", e.getMessage());
		}

		finally {
			dbObject.close();
		}
		return false;
	}

	@Override
	public boolean update(SQLiteDatabase dbObject, DTO dto) {
		try {
			WeedManagementDTO dtoObj = (WeedManagementDTO) dto;
			String whereCls = "Idweedmanagement = '"+ dtoObj.getIdweedmanagement()+"'";

			ContentValues cValues = new ContentValues();
			cValues.put("idWeedType",dtoObj.getIdWeedType());
			cValues.put("idWeedicide",dtoObj.getIdWeedicide());
			cValues.put("quantity", dtoObj.getQuantity());
			cValues.put("weedManagementDate", dtoObj.getWeedManagementDate());
			cValues.put("idLand", dtoObj.getIdLand());
			cValues.put("idStages", dtoObj.getIdStages());
			cValues.put("Photo", dtoObj.getPhoto());
			//cValues.put("Datecreated", dtoObj.getDatecreated());
			cValues.put("Datemodified", dtoObj.getDatemodified());
			cValues.put("syncFlag", dtoObj.getSyncFlag());
			cValues.put("actionFlag", dtoObj.getActionFlag());
			
			dbObject.update("WeedManagement", cValues, whereCls, null);

			return true;
		} catch (SQLException e) {
			Log.e("WeedManagementDAO  -- update", e.getMessage());
		} finally {
			dbObject.close();
		}
		return false;
	}

	@Override
	public List<DTO> getRecords(SQLiteDatabase dbObject) {
		List<DTO> instList = new ArrayList<DTO>();
		Cursor cursor = null;
		
		int count	= 0;
		
		try {
			cursor = dbObject.rawQuery("SELECT * FROM WeedManagement", null);
			if (cursor.moveToFirst()) {
				do {
					WeedManagementDTO dto = new WeedManagementDTO();
					dto.setIdweedmanagement(cursor.getString(count++));
					dto.setIdWeedType(cursor.getString(count++));
					dto.setIdWeedicide(cursor.getString(count++));
					dto.setQuantity(cursor.getString(count++));
					dto.setWeedManagementDate(cursor.getString(count++));
					dto.setIdLand(cursor.getString(count++));
					dto.setIdStages(cursor.getString(count++));
					dto.setPhoto(cursor.getString(count++));
					dto.setDatecreated(cursor.getString(count++));
					dto.setDatemodified(cursor.getString(count++));
					dto.setSyncFlag(cursor.getInt(count++));
					dto.setActionFlag(cursor.getInt(count++));

					instList.add(dto);
					
					count	= 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- getRecords", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();

			dbObject.close();
		}

		return instList;
	}

	@Override
	public List<DTO> getRecordsWithValues(SQLiteDatabase dbObject,String columnName, String columnValue) 
	{
		List<DTO> instList = new ArrayList<DTO>();
		Cursor cursor = null;
		
		int count	= 0;
		
		try {
			
			cursor = dbObject.rawQuery("SELECT * FROM WeedManagement WHERE "+ columnName + " = '" + columnValue + "'", null);
			
			if (cursor.moveToFirst()) {
				do {
					WeedManagementDTO dto = new WeedManagementDTO();
					
					dto.setIdweedmanagement(cursor.getString(count++));
					dto.setIdWeedType(cursor.getString(count++));
					dto.setIdWeedicide(cursor.getString(count++));
					dto.setQuantity(cursor.getString(count++));
					dto.setWeedManagementDate(cursor.getString(count++));
					dto.setIdLand(cursor.getString(count++));
					dto.setIdStages(cursor.getString(count++));
					dto.setPhoto(cursor.getString(count++));
					dto.setDatecreated(cursor.getString(count++));
					dto.setDatemodified(cursor.getString(count++));
					dto.setSyncFlag(cursor.getInt(count++));
					dto.setActionFlag(cursor.getInt(count++));

					instList.add(dto);
					
					count	= 0;
					
				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- getRecordsWithValues", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();
			dbObject.close();
		}

		return instList;
	}
	
	public List<DTO> getRecordsByLandAndStage(SQLiteDatabase dbObject,String columnName1, String columnValue1) 
	{
		List<DTO> instList = new ArrayList<DTO>();
		Cursor cursor = null;
		
		int count	= 0;
		
		try {
			
			String qry = "SELECT * FROM WeedManagement WHERE "+ columnName1 + " = '" + columnValue1 + "'";
			System.out.println("Suresh Qry :"+qry);
			cursor = dbObject.rawQuery(qry, null);
			if (cursor.moveToFirst()) {
				do {
					WeedManagementDTO dto = new WeedManagementDTO();
					
					dto.setIdweedmanagement(cursor.getString(count++));
					dto.setIdWeedType(cursor.getString(count++));
					dto.setIdWeedicide(cursor.getString(count++));
					dto.setQuantity(cursor.getString(count++));
					dto.setWeedManagementDate(cursor.getString(count++));
					dto.setIdLand(cursor.getString(count++));
					dto.setIdStages(cursor.getString(count++));
					dto.setPhoto(cursor.getString(count++));
					dto.setDatecreated(cursor.getString(count++));
					dto.setDatemodified(cursor.getString(count++));
					dto.setSyncFlag(cursor.getInt(count++));
					dto.setActionFlag(cursor.getInt(count++));

					instList.add(dto);
					
					count	= 0;
					
				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- getRecordsWithValues", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();
			dbObject.close();
		}

		return instList;
	}
	
	public boolean insertAll(SQLiteDatabase dbObject, List<WeedManagementDTO> list,String tablename)  {
		try {
			dbObject.beginTransaction();
			SQLiteStatement stmt = dbObject
					.compileStatement("INSERT INTO "+tablename+"(Idweedmanagement,idWeedType,idWeedicide,quantity,weedManagementDate,idLand,idStages,Photo,Datecreated,Datemodified,syncFlag,actionFlag)VALUES (?,?,?,?,?,?,?,?,?,?,?,?)");

			int count = 1;

			for (WeedManagementDTO dto : list) 
			{
				stmt.bindString(count++, dto.getIdweedmanagement());
				stmt.bindString(count++, dto.getIdWeedType()		== null ? "" : dto.getIdWeedType());
				stmt.bindString(count++, dto.getIdWeedicide()		== null ? "" : dto.getIdWeedicide());
				stmt.bindString(count++, dto.getQuantity()			== null ? "" : dto.getQuantity());
				stmt.bindString(count++, dto.getWeedManagementDate()			== null ? "" : dto.getWeedManagementDate());
				stmt.bindString(count++, dto.getIdLand()			== null ? "" : dto.getIdLand());
				stmt.bindString(count++, dto.getIdStages()			== null ? "" : dto.getIdStages());
				stmt.bindString(count++, dto.getPhoto()				== null ? "" : dto.getPhoto());
				stmt.bindString(count++, dto.getDatecreated()		== null ? "" : dto.getDatecreated());
				stmt.bindString(count++, dto.getDatemodified()		== null ? "" : dto.getDatemodified());
				stmt.bindLong(count++, dto.getSyncFlag()			== null ? 1 : dto.getSyncFlag());
				stmt.bindLong(count++, dto.getActionFlag()			== null ? 1 : dto.getActionFlag());

				count = 1;

				stmt.executeInsert();
			}

			dbObject.setTransactionSuccessful();
			return true;
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- insertAll", e.getMessage());
		} finally {
			dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}

	public List<WeedManagementDTO> getTransactionalData(SQLiteDatabase dbObject) 
	{
		List<WeedManagementDTO> instList = new ArrayList<WeedManagementDTO>();
		Cursor cursor = null;
		
		int count	= 0;
		
		try {
			cursor = dbObject.rawQuery("SELECT * FROM WeedManagement where syncFlag='0'", null);
			if (cursor.moveToFirst()) {
				do {
					WeedManagementDTO dto = new WeedManagementDTO();
					dto.setIdweedmanagement(cursor.getString(count++));
					dto.setIdWeedType(cursor.getString(count++));
					dto.setIdWeedicide(cursor.getString(count++));
					dto.setQuantity(cursor.getString(count++));
					dto.setWeedManagementDate(cursor.getString(count++));
					dto.setIdLand(cursor.getString(count++));
					dto.setIdStages(cursor.getString(count++));
					dto.setPhoto(cursor.getString(count++));
					dto.setDatecreated(cursor.getString(count++));
					dto.setDatemodified(cursor.getString(count++));
					dto.setSyncFlag(cursor.getInt(count++));
					dto.setActionFlag(cursor.getInt(count++));

					instList.add(dto);
					
					count	= 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- getTransactionalData", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();

			dbObject.close();
		}

		return instList;
	}
	
	public boolean updateTransactionalData(SQLiteDatabase dbObject)
	{
		try {

			String query ="UPDATE  WeedManagement  set syncFlag='1'";
			dbObject.execSQL(query);    
			return true;
			
		} catch (SQLException e) {
			Log.e("WeedManagementDAO  -- updateTransactionalData", e.getMessage());
		} finally {
			dbObject.close();
		}
		return false;
	}
	
	public List<WeedManagementDTO> getCompleteData(SQLiteDatabase dbObject) 
	{
		List<WeedManagementDTO> instList = new ArrayList<WeedManagementDTO>();
		Cursor cursor = null;
		
		int count	= 0;
		
		try {
			cursor = dbObject.rawQuery("SELECT * FROM WeedManagement", null);
			if (cursor.moveToFirst()) {
				do {
					WeedManagementDTO dto = new WeedManagementDTO();
					dto.setIdweedmanagement(cursor.getString(count++));
					dto.setIdWeedType(cursor.getString(count++));
					dto.setIdWeedicide(cursor.getString(count++));
					dto.setQuantity(cursor.getString(count++));
					dto.setWeedManagementDate(cursor.getString(count++));
					dto.setIdLand(cursor.getString(count++));
					dto.setIdStages(cursor.getString(count++));
					dto.setPhoto(cursor.getString(count++));
					dto.setDatecreated(cursor.getString(count++));
					dto.setDatemodified(cursor.getString(count++));
					dto.setSyncFlag(cursor.getInt(count++));
					dto.setActionFlag(cursor.getInt(count++));

					instList.add(dto);
					
					count	= 0;

				} while (cursor.moveToNext());
			}
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- getRecords", e.getMessage());
		} finally {
			if (cursor != null && !cursor.isClosed())
				cursor.close();

			dbObject.close();
		}

		return instList;
	}
	
	public boolean insertPartialData(SQLiteDatabase dbObject) {
		try {
			String query ="INSERT OR REPLACE INTO WeedManagement(Idweedmanagement,idWeedType,idWeedicide,quantity,weedManagementDate,idLand,idStages,Photo,Datecreated,Datemodified,syncFlag,actionFlag) SELECT t.Idweedmanagement,t.idWeedType,t.idWeedicide,t.quantity,t.weedManagementDate,t.idLand,t.idStages,t.Photo,t.Datecreated,t.Datemodified,t.syncFlag,t.actionFlag  FROM WeedManagement_Temp t left join WeedManagement o on o.Idweedmanagement=t.Idweedmanagement";
			dbObject.execSQL(query);
     
		
			return true;
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- insertPartial", e.getMessage());
		} finally {
			//dbObject.endTransaction();
			dbObject.close();
		}
		return false;
	}
	public boolean deleteAll(SQLiteDatabase dbObject) {
		try {
			String query ="DELETE   FROM WeedManagement_Temp";
			dbObject.execSQL(query);
     
		
			return true;
		} catch (Exception e) {
			Log.e("WeedManagementDAO  -- deleteall", e.getMessage());
		} finally {
			
			dbObject.close();
		}
		return false;
		
	}
}
